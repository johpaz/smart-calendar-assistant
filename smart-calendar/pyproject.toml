[project]
name = "smart-calendar"
version = "0.0.1"
description = "An agent with a tool to save long-term memory."
authors = [
    { name = "John Paez", email = "john.paez@johnpazdev.com.co" },
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11"
dependencies = [
    "langgraph",
    # Optional (for selecting different models)
    "langchain-openai>=0.2.1",
    "langchain>=0.3.8",
    "langchain-core>=0.3.8",
    "python-dotenv>=1.0.1",
    "langgraph-sdk>=0.1.32",
]

[project.optional-dependencies]
dev = ["mypy>=1.11.1", "ruff>=0.6.1", "pytest-asyncio"]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["smart_calendar"]
[tool.setuptools.package-dir]
"smart_calendar" = "src/smart_calendar"
"langgraph.templates.smart_calendar" = "src/smart_calendar"


[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
    "D",    # pydocstyle
    "D401", # First line should be in imperative mood
    "T201",
    "UP",
]
lint.ignore = ["UP006", "UP007", "UP035", "D417", "E501"]
include = ["*.py", "*.pyi", "*.ipynb"]
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]
"ntbk/*" = ["D", "UP", "T201"]
[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_errors = true